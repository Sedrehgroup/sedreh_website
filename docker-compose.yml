version: "3.9"

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    networks:
      - main
    expose:
      - 5672
    restart: on-failure

  geoserver:
    image: kartoza/geoserver:2.20.4
    container_name: geoserver
    expose:
      - 8080
    restart: always
    environment:
      - GEOSERVER_ADMIN_USER=sedreh
      - GEOSERVER_ADMIN_PASSWORD=ABcd1234!@
    volumes:
      - geoserver_sedreh:/opt/geoserver/data_dir
      - geoserver_footprints_sedreh:/opt/footprints_dir
      - geoserver_gwc_sedreh:/opt/geoserver/data_dir/gwc
      - geoserver_letsencrypt_sedreh:/etc/letsencrypt
      - geoserver_fonts_sedreh:/opt/fonts
    networks:
      - main

  postgis:
    image: kartoza/postgis:14-3.2
    container_name: postgis
    volumes:
      - db_land:/var/lib/postgresql
    restart: on-failure
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASS=Alireza12851376
      - POSTGRES_DBNAME=sedreh
    networks:
      - main
    expose:
      - 5432

  api_django:
    build:
      context: ./api_django
    command: sh -c "python manage.py migrate 
              && celery -A config worker -l INFO -f celery_worker.log --detach 
              && celery -A config beat -l info -f celery_beat.log --scheduler django_celery_beat.schedulers:DatabaseScheduler --detach 
              && gunicorn --reload config.wsgi --bind 0.0.0.0:8000"
    container_name: api_django
    depends_on:
      - geoserver
      - postgis
    expose:
      - 8000
    networks:
      - main
    environment:
      - GEOSERVER_USERNAME=sedreh
      - GEOSERVER_PASSWORD=ABcd1234!@
      - GEOSERVER_WORKSPACE=sedreh
      - GEOSERVER_NAMESPACE=localhost
      - GEOSERVER_HOST=geoserver
      - GEOSERVER_PORT=8080
      - GEOSERVER_HOST_IP=localhost
      - DB_HOST=postgis
      - DB_NAME=sedreh
      - DB_USER=postgres
      - DB_PASS=Alireza12851376
      - DB_PORT=5432
      - DB_SCHEMA=public
      - ALLOW_ORIGIN=http://localhost:3000
    volumes:
      - /home/ubuntu/sedreh_web_appilcation/api_django/images:/api_django/images
      - ./api_django:/api_django

    restart: always


  frontend:
    stdin_open: true
    build:
      context: ./frontend
    container_name: react
    command: npm run start
    expose:
      - 3000
    networks:
      - main
    restart: always

  nginx:
    container_name: nginx
    command: nginx -g 'daemon off;'
    depends_on:
      - api_django
      - frontend
    image: nginx:latest
    networks:
      - main
    ports:
      - "80:80"
    restart: on-failure
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    external_links:
      - frontend

networks:
  main:

volumes:
  db_land:
  geoserver_sedreh:
  geoserver_footprints_sedreh:
  geoserver_gwc_sedreh:
  geoserver_letsencrypt_sedreh:
  geoserver_fonts_sedreh: